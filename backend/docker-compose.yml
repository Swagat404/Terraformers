services:
  # Java Service
  java:
    build:
      context: .
      dockerfile: docker/java.Dockerfile
    container_name: terraformers-java
    command: tail -f /dev/null  # Keep container alive
    volumes:
      - ./java:/app/java
    env_file:
      - .env
    networks:
      - terraformers-network
    ports:
      - "8080:8080"  # Example port for Java app

  # Python Service
  python:
    build:
      context: .
      dockerfile: docker/python.Dockerfile
    container_name: terraformers-python
    command: tail -f /dev/null  # Keep container alive
    volumes:
      - ./python:/app/python
    env_file:
      - .env
    networks:
      - terraformers-network
    ports:
      - "5002:5002"  # Example port for Python app

  # C# Service
  csharp:
    build:
      context: .
      dockerfile: docker/csharp.Dockerfile
    container_name: terraformers-csharp
    command: tail -f /dev/null  # Keep container alive
    volumes:
      - ./csharp:/app/csharp
    env_file:
      - .env
    networks:
      - terraformers-network
    ports:
      - "5001:5001"  # Example port for .NET Core

  # PostgreSQL Database Service
  db:
    image: postgres:14
    container_name: mars_db
    environment:
      - POSTGRES_DB=mars_db
      - POSTGRES_USER=mars_user
      - POSTGRES_PASSWORD=supersecurepassword
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - terraformers-network

networks:
  terraformers-network:
    driver: bridge

volumes:
  db_data:
